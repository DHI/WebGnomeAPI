[app:webgnome_api]
use = egg:webgnome_api

pyramid.reload_templates = true
pyramid.debug_authorization = false
pyramid.debug_notfound = false
pyramid.debug_routematch = false
pyramid.debug_templates = true
pyramid.default_locale_name = en

pyramid.includes = cornice
                   pyramid_redis_sessions

cors_policy.origins = http://0.0.0.0:8080
                      http://hazweb2.orr.noaa.gov:7448
                      http://localhost:8080
                      http://localhost:7448

# Il y a plusiers des options Redis, mais ceci est le seul requiree'
redis.sessions.secret = 12342C48
redis.sessions.timeout = 86400

install_path = %(here)s
model_data_dir = models
locations_dir = location_files
save_file_dir = save_files
help_dir = help

max_upload_size = 20 * 1024 * 1024

[pipeline:main]
pipeline =
    gzip
    webgnome_api

[server:main]
use = egg:waitress#main
host = 161.55.65.18
port = 7450

[filter:gzip]
use = egg:Paste#gzip
compress_level = 6

# Begin logging configuration

[loggers]
keys = root, webgnome_api

[handlers]
keys = console, msgs_file, webgnome_api_file, email

[formatters]
keys = generic

[logger_root]
level = DEBUG
handlers = console, msgs_file, email

[logger_webgnome_api]
level = INFO
handlers = webgnome_api_file
qualname = webgnome_api

[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = NOTSET
formatter = generic

# root logger keeps all output in messages.log - following handler
# just keep copy of webgnome_api messages. Overwrite file
# instead of appending and only rollover to one file so it just keeps
# recent messages

[handler_webgnome_api_file]
class = handlers.RotatingFileHandler
args = ("%(here)s/webgnome_api.log", "w", 1000000, 1)
level = NOTSET
formatter = generic 

# only invoked if error is being logged - there aren't very many in py_gnome
# so unlikely to get used but maybe useful in future

[handler_email]
class = handlers.SMTPHandler
args = (('mta.nems.noaa.gov', 25), '"APPLICATION ALERT" <webgnome@hazweb2>', ['jasmine.sandhu@noaa.gov', 'Nathan.Wilkins@noaa.gov'], 'New Critical Event From [WebGnome]')
level = ERROR
formatter = generic

[handler_rotatefile]
class = handlers.RotatingFileHandler
args = ("%(here)s/messages.log", "a", 1000000, 3)
level = NOTSET
formatter = generic 

[handler_file]
class = logging.FileHandler
args = ("%(here)s/messages.log", "a")
level = NOTSET
formatter = generic

[formatter_generic]
format = %(asctime)s %(levelname)-5.5s [%(name)s][%(threadName)s] %(message)s

# End logging configuration
